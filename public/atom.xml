<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>696px</title>
  
  <subtitle>blog</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="demoorbug.github.io/"/>
  <updated>2018-09-12T09:18:28.375Z</updated>
  <id>demoorbug.github.io/</id>
  
  <author>
    <name>DEBUG</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>node项目的部署</title>
    <link href="demoorbug.github.io/2018/09/11/node%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
    <id>demoorbug.github.io/2018/09/11/node项目的部署/</id>
    <published>2018-09-11T11:42:40.000Z</published>
    <updated>2018-09-12T09:18:28.375Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Node-mongodb-nginx-linux"><a href="#Node-mongodb-nginx-linux" class="headerlink" title="Node+mongodb+nginx+linux"></a>Node+mongodb+nginx+linux</h2><p><strong>本次服务器为centos，只是临时在虚拟机建立的，虚拟机密码为1004041672</strong><br><strong>696px网站的部署以及linux一些命令记录，还有nginx是怎么用的，到底是个什么东西</strong><br><a id="more"></a></p><h2 id="4-1-2"><a href="#4-1-2" class="headerlink" title="4-1~2"></a>4-1~2</h2><h3 id="通过ssh实现无密码登陆"><a href="#通过ssh实现无密码登陆" class="headerlink" title="通过ssh实现无密码登陆"></a>通过ssh实现无密码登陆</h3><p><strong>客户机</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">cd</span> /user/demoorbug | <span class="built_in">cd</span> ~</span><br><span class="line">找到是否有.ssh这个文件夹如果有id_rsa id_rsa.pub(公钥)就是说明配置过,如果需要进行下面的的步骤的话最好改名再继续</span><br><span class="line">ssh-key -t rsa -b 4096 -C <span class="string">"465298643@qq.com"</span></span><br><span class="line">虽然不知道为什么要敲这个命令</span><br><span class="line">接下来是把这个ssh代理开起来</span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></span><br><span class="line">ssh-add ~/.ssh/id_rsa 加入代理</span><br><span class="line">最终目的呢就是拿到id_rsa</span><br></pre></td></tr></table></figure></p><p><strong>进入linux终端</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输入和windows一样的命令</span><br><span class="line">要把windows上的公钥内容粘贴到 linux的authorized_keys下</span><br><span class="line">但是还是要有几个动作来完成，首先是授权</span><br><span class="line">chmod <span class="number">600</span> authorized_keys</span><br><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure></p><p><strong> 可以google “get id_rsa” 生成公钥和私钥这个没搞明白 </strong></p><p><em>以上方法我是没搞定</em><br><strong>参考文献</strong><a href="https://zhidao.baidu.com/question/1304780305953700019.html" target="_blank" rel="noopener">centos怎么配置ssh免密码</a></p><p><strong>我就有点晕，明明可以很简单的ssh-keygen 为什么要那么麻烦呢，秀操作啊老师MMP</strong></p><h2 id="5-1-2"><a href="#5-1-2" class="headerlink" title="5-1~2"></a>5-1~2</h2><h3 id="增加服务器安全性"><a href="#增加服务器安全性" class="headerlink" title="增加服务器安全性"></a>增加服务器安全性</h3><blockquote><p>如果你买了一个服务器没有修改的话登陆端口就是<strong>22</strong>虽然不知道你的用户名但是出于安全性考虑还是得修改这个</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">centos里面呢必须在防火墙中添加此端口不然还是访问不了</span><br><span class="line">vi /etc/sysconfig/iptables</span><br><span class="line">service iptables restart</span><br><span class="line">sudo vi /etc/ssh/sshd_config</span><br><span class="line">Port 31281</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 31281 root@192.168.0.119</span><br></pre></td></tr></table></figure><p><a href="http://www.osyunwei.com/archives/672.html" target="_blank" rel="noopener">增加安全性参考文章</a> 修改端口、禁止root用户登陆</p><blockquote><p>什么都不用添加，更改用户权限就行了。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gpasswd -a imooc sudo</span><br><span class="line">sudo visudo </span><br><span class="line">在root ALL=(ALL) ALL</span><br><span class="line">下添加相同参数只需要修改用户名即可 好像也有个目录是sudoers</span><br><span class="line">查到了在/etc/sudoers 目录下</span><br></pre></td></tr></table></figure><p><strong>port 范围0~65536 但是0~1024最好不要使用，而且是必须用root身份启动. 1024~65536选择使用</strong></p><blockquote><p>关闭root登陆权限，禁止密码登陆，禁止空密码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin no  禁止root</span><br><span class="line">PermitEmptyPasswords no 禁止空密码</span><br><span class="line">passwordAuthentication no 禁止密码登陆</span><br></pre></td></tr></table></figure><blockquote><p>ctrl+a 回到行首 ctrl+e 回到行尾</p></blockquote><h3 id="配置iptables-Fail2Ban"><a href="#配置iptables-Fail2Ban" class="headerlink" title="配置iptables  Fail2Ban"></a>配置iptables  Fail2Ban</h3><p><a href="http://blog.csdn.net/robertsong2004/article/details/36677689" target="_blank" rel="noopener">yum (rpm) 和 apt-get的对应关系</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update -y | sudo apt-get upgrade -y</span><br><span class="line">yum makecache | yum update</span><br><span class="line"></span><br><span class="line">sudo iptables -F</span><br></pre></td></tr></table></figure></p><blockquote><p>iptables.up.rules 此文件里面内容如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line"># 允许所有建立起来的链接</span><br><span class="line"># allow all connections</span><br><span class="line">-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line"></span><br><span class="line"># 允许所有出去的流量</span><br><span class="line">#allow out traffic</span><br><span class="line">-A OUTPUT -j ACCEPT</span><br><span class="line"></span><br><span class="line"># 允许https这样下的链接</span><br><span class="line">#allow http https</span><br><span class="line">-A INPUT -p tcp --dport 443 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># ssh登陆方式建立通道</span><br><span class="line">#allow ssh port login</span><br><span class="line">-A INPUT -p tcp -m state --state NEW --dport 31281 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># 方便测试服务器有没有停机，都是通过ping这种方式</span><br><span class="line">#ping</span><br><span class="line">-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># 日志</span><br><span class="line">#log denied calls</span><br><span class="line">-A INPUT -m limit --limit 5/min -j LOG --log-prefix &quot;iptables denied:&quot; --log-level 7</span><br><span class="line"></span><br><span class="line"># 敏感规则对于恶意访问ip拦截</span><br><span class="line">#drop incoming sensitive connections</span><br><span class="line">-A INPUT -p tcp --dport 80 -i eth0 -m state --state NEW -m recent --set</span><br><span class="line">#-A INPUT -p tcp --dport 80 -i eth0 -m state --state NEW -m recent --update --seconds 60 --hitcount 150 -j DROP  这段代码有问题 现在没搞懂这个配置文件所以也解决不了 失望</span><br><span class="line"></span><br><span class="line">-A INPUT -p tcp --dport 80 -i eth0 -m state --state NEW -m recent --update --seconds 60 -j DROP</span><br><span class="line"></span><br><span class="line"># 禁止所有其他进入服务器流量</span><br><span class="line">#reject all other inbound</span><br><span class="line">-A INPUT -j REJECT</span><br><span class="line">-A FORWARD -j REJECT</span><br><span class="line"></span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -F 不知道什么意思啊 反正搞出来了(经过深入学习这是一条清空防火墙规则的命令)</span><br><span class="line">sudo iptables-restore &lt; /etc/iptables.up.rules</span><br><span class="line">sudo service iptables status </span><br><span class="line"></span><br><span class="line">关闭虚拟机防火墙：</span><br><span class="line"></span><br><span class="line">关闭命令：  service iptables stop</span><br><span class="line"></span><br><span class="line">永久关闭防火墙：chkconfig iptables off</span><br><span class="line"></span><br><span class="line">两个命令同时运行，运行完成后查看防火墙关闭状态</span><br><span class="line">service iptables status</span><br><span class="line"></span><br><span class="line">1 关闭防火墙-----service iptables stop </span><br><span class="line">2 启动防火墙-----service iptables start </span><br><span class="line">3 重启防火墙-----service iptables restart </span><br><span class="line">4 查看防火墙状态--service iptables status </span><br><span class="line">5 永久关闭防火墙--chkconfig iptables off </span><br><span class="line">6 永久关闭后启用--chkconfig iptables on</span><br></pre></td></tr></table></figure><blockquote><p>创建sh脚本 每次重启后自己输入sudo iptables-restore &lt; /etc/iptables.up.rules</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/sysconfig/if-up.d/iptables</span><br><span class="line">内容：</span><br><span class="line">#!/bin/sh</span><br><span class="line">iptables-restore /etc/iptables.up.rules</span><br><span class="line">给执行权限</span><br><span class="line">sudo chmod +x iptables</span><br></pre></td></tr></table></figure><h3 id="搞了几个小时02点17分-居然把iptables弄没见了？明天重新创建吧RLG"><a href="#搞了几个小时02点17分-居然把iptables弄没见了？明天重新创建吧RLG" class="headerlink" title="搞了几个小时02点17分 居然把iptables弄没见了？明天重新创建吧RLG"></a>搞了几个小时02点17分 居然把iptables弄没见了？明天重新创建吧RLG</h3><h3 id="重新安装，重新来了一遍更熟练了"><a href="#重新安装，重新来了一遍更熟练了" class="headerlink" title="重新安装，重新来了一遍更熟练了"></a>重新安装，重新来了一遍更熟练了</h3><p><a href="http://blog.csdn.net/Gekkoou/article/details/51119549" target="_blank" rel="noopener">Fail2ban源码安装方法</a></p><blockquote><p>源码安装</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/fail2ban/fail2ban/archive/0.9.3.tar.gz</span><br><span class="line">tar -xzvf 0.9.3.tar.gz</span><br><span class="line"><span class="built_in">cd</span> fail2ban-0.9.3</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><h3 id="说实话-fail2ban这里了-00点55分-睡觉去了-明天下载ubuntu把-能把我累死，我也是醉了"><a href="#说实话-fail2ban这里了-00点55分-睡觉去了-明天下载ubuntu把-能把我累死，我也是醉了" class="headerlink" title="说实话 fail2ban这里了 00点55分 睡觉去了  明天下载ubuntu把 能把我累死，我也是醉了"></a>说实话 fail2ban这里了 00点55分 睡觉去了  明天下载ubuntu把 能把我累死，我也是醉了</h3><h2 id="经研究，还是用ubuntu系统把-重新记录新命令，以上均为centos命令"><a href="#经研究，还是用ubuntu系统把-重新记录新命令，以上均为centos命令" class="headerlink" title="经研究，还是用ubuntu系统把 重新记录新命令，以上均为centos命令"></a>经研究，还是用ubuntu系统把 重新记录新命令，以上均为centos命令</h2><p>防火墙<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">和上面方法类似只不过命令有所改变</span><br><span class="line">sudo ufw status 查看防火墙状态</span><br><span class="line">sudo ufw enable 开启防火墙</span><br><span class="line">sudo ufw disable 关闭防火墙</span><br><span class="line"></span><br><span class="line">每次更改/etc/iptables.up.rules</span><br><span class="line">都要重新</span><br><span class="line">sudo iptables-restore &lt; /etc/iptables.up.rules</span><br></pre></td></tr></table></figure></p><p>Fail2ban<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install fail2ban</span><br><span class="line">sudo vi /etc/Fail2ban/jail.conf</span><br><span class="line"> 以下都更改</span><br><span class="line"> # bantime = 600</span><br><span class="line"> bantime = 3600</span><br><span class="line"> </span><br><span class="line"> 改为自己邮箱</span><br><span class="line"> destemail = 1004041672@qq.com</span><br><span class="line"></span><br><span class="line"> #action = %(action_)s 搞不懂为什么要加mw</span><br><span class="line"> action = %(action_mw)s</span><br><span class="line"> </span><br><span class="line">sudo service fail2ban status 查看状态 想要停掉 stop就好了</span><br></pre></td></tr></table></figure></p><blockquote><p>以上都是一些基础性的比较简单的安全配置，这些配置呢都算是基础之劳，但是可以让一台裸的服务器大大提高安全防护等级，虽然防护等级不够，但是抵御一些基础的东西还是ok的，想做更高级的东西需要做很多运维知识的储备，比如说可以给生产的服务器登陆设置ip的绑定或者是限制，只有特定内网的机器才能登陆这台服务器， 也就是通俗所讲的在内网假设一台跳板机 ，通过本地电脑连接跳板机再从跳板机登陆到服务器，</p></blockquote><h2 id="6-1-2"><a href="#6-1-2" class="headerlink" title="6-1~2"></a>6-1~2</h2><h3 id="开始搭建环境了-呜呜呜呜呜-终于到了"><a href="#开始搭建环境了-呜呜呜呜呜-终于到了" class="headerlink" title="开始搭建环境了 呜呜呜呜呜 终于到了"></a>开始搭建环境了 呜呜呜呜呜 终于到了</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">首先再更新一边</span><br><span class="line">sudo apt-get update</span><br><span class="line">安装模块/包文件</span><br><span class="line">安装了一大堆有些认识有些没见过</span><br><span class="line">sudo apt-get install vim openssl build-essential libssl-dev wget curl git</span><br><span class="line">到github 找到 nvm 下面有两种安装方式 wget curl 我们复制wget 建议安装好后再打开一个终端操作</span><br><span class="line">nvm install v6.9.5  为什么安装的是node呢？</span><br><span class="line">nvm use v6.9.5</span><br><span class="line">nvm alias default 默认让系统里面的版本就是这个版本？难道是不让升级？</span><br><span class="line"></span><br><span class="line">因为国内的原因，用npm太慢或者链接不上，改为淘宝的镜像下载</span><br><span class="line">npm --registry=https://registry.npm.taobao.org install -g npm</span><br><span class="line">原来npm -v可以查看这个镜像的更新程度啊 哈哈哈  老师视频的版本是4.2.0 目前2018-1-14版本号是5.6.0</span><br><span class="line"></span><br><span class="line">增加系统文件监控次数</span><br><span class="line">echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p </span><br><span class="line"></span><br><span class="line">安装cnpm 有时候npm拉取不到的东西可以去cnpm下载，网速不行还是使用npm</span><br><span class="line">npm --registry=https://registry.npm.taobao.org install -g cnpm</span><br><span class="line">cnpm sync koa 同步一下 koa框架就会强制把国外的模块拿到国内去</span><br><span class="line"></span><br><span class="line">安装全局工具包</span><br><span class="line">npm i pm2 webpack gulp grunt-cli -g</span><br><span class="line">vi app.js</span><br><span class="line">内容如下</span><br><span class="line">const http = require(&apos;http&apos;)</span><br><span class="line"></span><br><span class="line">http.createServer(function(req,res)&#123;</span><br><span class="line">        res.writeHead(200,&#123;&apos;Content-Type&apos; : &apos;text/plain&apos;&#125;)</span><br><span class="line">        res.end(&apos;来自慕课的力量&apos;)</span><br><span class="line">&#125;).listen(8080)</span><br><span class="line"></span><br><span class="line">console.log(&apos;server runing on http://192.168.0.121:8080&apos;)</span><br><span class="line">80端口好像被占用了或者被禁用了 改成了8080</span><br><span class="line">但是我是内网服务器，不能再公网访问到，很蛋疼</span><br><span class="line"></span><br><span class="line">node app.js</span><br><span class="line">sudo vi /etc/iptables.up.rules</span><br><span class="line">#allow http https下增加一行格式一样更改端口号即可</span><br><span class="line">sudo iptables-restore &lt; /etc/iptables.up.rules</span><br><span class="line">然后就可以通过ip+端口的方式访问到服务器上返回的纯文本</span><br><span class="line"></span><br><span class="line">不过这样的话 ctrl+c 就会结束服务而且出现错误的话服务直接就停止了，所以我们需要用到pm2管理node</span><br><span class="line"></span><br><span class="line">pm2 start app.js</span><br><span class="line">pm2 list 查看本台服务器跑的服务</span><br><span class="line">pm2 show app 更加详细的一个展示  这里是名字所以app.js不行</span><br><span class="line">pm2 logs 查看实时日志</span><br></pre></td></tr></table></figure><blockquote><p>哇咔咔咔咔  原来用node搭建好就可以访问了啊 啊？？？？？？？？WDMY</p></blockquote><h3 id="下节预告-我们想要通过不带端口号的ip或者域名直接访问到80端口的服务，但是现在的用户权限又不足以让我们再80端口进行监听-下一节使用nginx来实现更加魔法的效果"><a href="#下节预告-我们想要通过不带端口号的ip或者域名直接访问到80端口的服务，但是现在的用户权限又不足以让我们再80端口进行监听-下一节使用nginx来实现更加魔法的效果" class="headerlink" title="下节预告 我们想要通过不带端口号的ip或者域名直接访问到80端口的服务，但是现在的用户权限又不足以让我们再80端口进行监听 下一节使用nginx来实现更加魔法的效果"></a>下节预告 我们想要通过不带端口号的ip或者域名直接访问到80端口的服务，但是现在的用户权限又不足以让我们再80端口进行监听 下一节使用nginx来实现更加<strong>魔法的效果</strong></h3><h2 id="7-1-mp4"><a href="#7-1-mp4" class="headerlink" title="7-1.mp4"></a>7-1.mp4</h2><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><blockquote><p>这里介绍下为什么要用到nginx，以及nginx的主要作用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原因是为什么的demoobug用户下node是不具备root的运行权限的，所以不能监听0~1024之间的任何一个端口，当然也包括80端口，如果强制通过sudo的话来启动node服务也不是不可以一个是需要额外的配置，一个是我们去放大node的一个权限，这多少会带来一些额外的风险和成本，我们先不通过域名来访问，先直接通过ip来达到访问的效果的话，怎么做呢：</span><br><span class="line">我们就需要引入nginx用root级别的权限来启动对80端口的监听，同时吧80端口的流量分配给node服务的另一个端口实现这种服务的代理，如何服务器只需要一个网站程序的话，那解析网站到服务器的一个网址，网站程序监听80端口就可以了，如果是服务器有很多个应用，借助nginx的话不仅可以实现端口的代理，还可以实现负载均衡，让他来判断是来自哪个域名或者是来自IP的一个访问，可以根据配置的规则来准发给特定的端口，或者是特定的某几台机器，在我们这个案例中就是将80端口的请求转发到node启动的8080端口来处理</span><br></pre></td></tr></table></figure><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">sudo service apache2 stop  </span><br><span class="line">sudo service apache stop   有些服务器会预装apache 暂停估计是有冲突？还是端口冲突？</span><br><span class="line">update-rc.d -f apache2 remove  再来试试卸载</span><br><span class="line"> Removing any system startup links for /etc/init.d/apache2 ...  这个的意思是有吗？</span><br><span class="line"></span><br><span class="line">sudo apt-get remove apache2  然后再移除apache2  还真的有。。。</span><br><span class="line"></span><br><span class="line">sudo apt-get update 然后更新包列表。。。</span><br><span class="line"></span><br><span class="line">sudo apt-get install nginx   </span><br><span class="line"></span><br><span class="line">nginx -v 稳定版本1.4.6 </span><br><span class="line"></span><br><span class="line">cd /etc/nginx/conf.d </span><br><span class="line"></span><br><span class="line">sudo vi 696px-com-8080.conf   一目了然</span><br><span class="line"></span><br><span class="line">配置内容</span><br><span class="line">upstream 696px &#123;</span><br><span class="line"> server 127.0.0.1:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"> listen 80;</span><br><span class="line"> server_name 192.168.43.7;</span><br><span class="line"></span><br><span class="line"> location / &#123;</span><br><span class="line">  proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">  proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;</span><br><span class="line">  proxy_set_header Host $http_host;</span><br><span class="line">  proxy_set_header X-Nginx-Proxy true;</span><br><span class="line"></span><br><span class="line">  proxy_pass http://696px;</span><br><span class="line">  proxy_redirect off;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sudo nginx -s reload</span><br><span class="line"></span><br><span class="line">sudo vi /etc/nginx/nginx.conf</span><br><span class="line"># server_tokens off; 取消注释</span><br><span class="line"></span><br><span class="line">sudo service nginx reload 就好了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这样浏览器返回的头信息就service就是nginx了 没有了更详细的nginx 1.4.6(ubuntu)</span><br></pre></td></tr></table></figure><blockquote><p>好好回顾一下前面的东西，以后部署项目的话心里有点B数</p></blockquote><h2 id="8-1-2"><a href="#8-1-2" class="headerlink" title="8-1~2"></a>8-1~2</h2><h3 id="主要就是域名解析以及七牛云的用法-七牛云耶终于找到可以用的地方了，第一次接触也不知道是啥时候？"><a href="#主要就是域名解析以及七牛云的用法-七牛云耶终于找到可以用的地方了，第一次接触也不知道是啥时候？" class="headerlink" title="主要就是域名解析以及七牛云的用法(七牛云耶终于找到可以用的地方了，第一次接触也不知道是啥时候？)"></a>主要就是域名解析以及七牛云的用法(七牛云耶终于找到可以用的地方了，第一次接触也不知道是啥时候？)</h3><blockquote><p>就是不知道DNSPOD比域名厂商免费提供的解析好多少。</p></blockquote><h2 id="9-1-2"><a href="#9-1-2" class="headerlink" title="9 1-2"></a>9 1-2</h2><h3 id="安装mongoDB"><a href="#安装mongoDB" class="headerlink" title="安装mongoDB"></a>安装mongoDB</h3><blockquote><p>老师说可以购买一个现成的服务器，但是我这毕竟自己用，那样的话成本太大</p></blockquote><blockquote><p>google搜索  install mongodb on ubuntu 找到后将manual改为V3.4(当然我没改了喽)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/apt/apt.conf 这个里面是阿里云镜像会导致安装失败，这里要注释掉(当然我的服务器是虚拟机的就不存在这样的问题)</span><br><span class="line"> Acquire::http::Proxy &quot;http://mirrors.aliyun.com&quot;;</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y mongodb-org</span><br><span class="line">如果嫌下载速度慢的话可以终止掉去</span><br><span class="line">sudo vi /etc/apt/sources.list.d/mongodb-org-3.6.list 把镜像地址修改为阿里云的</span><br><span class="line">原：deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.6 multiverse</span><br><span class="line">替：deb [ arch=amd64 ] https://mirrors.aliyun.com/mongodb/apt/ubuntu trusty/mongodb-org/3.6 multiverse</span><br><span class="line"></span><br><span class="line">sudo service mongod start 开启服务</span><br><span class="line">cat /var/log/mongodb/mongod.log 检查是否开启成功</span><br></pre></td></tr></table></figure><p>然而发现mongo命令启动不了，发现是防火墙问题<br>修改 /etc/iptables.up.rules<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mongodb connect</span><br><span class="line">-A INPUT -s 127.0.0.1 -p tcp --destination-port 27017 -m state --state NEW,ESTABLISHED -j ACCEPT</span><br><span class="line">-A OUTPUT -d 127.0.0.1 -p tcp --source-port 27017 -m state --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure></p><p>sudo iptables-restore &lt; /etc/iptables.up.rules 必须执行此条命令才可生效</p><blockquote><p>全世界的人都知道mongodb跑在27017端口所以要修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/mongod.conf  修改为8081</span><br><span class="line">然后更新防火墙</span><br><span class="line">原来修改后还要指定？那修改的意义是什么呢</span><br><span class="line">mongo --port 8081</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>打包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zcvf linux.tar.gz linux</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>本地文件上传linux<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P 31281 ./linux.tar.gz demoorbug@192.168.1.106:/home/demoorbug/dbbackup</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvf linux.tar.gz</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>备份数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongodump -h 127.0.0.1:27017 -d 696px -0 696px.app.backup</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>导入mongodb数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongorestore -p 8081 -d 696px ./dbbackup/696px.app.backup/696px</span><br><span class="line">上面的命令报错了</span><br><span class="line">mongorestore --host 127.0.0.1:8081 -d 696px ./dbbackup/696px.app.backup/696px</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>查看数据库是否导入成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br><span class="line">show dbs</span><br><span class="line">use 696px</span><br><span class="line">show tables</span><br><span class="line">db.creations.find(&#123;&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.users.find(&#123;&#125;)</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>导出单表数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongoexport -d imooc-movie -c users -q &apos;&#123;&quot;name&quot;:&#123;&amp;ne:null&#125;&#125;&apos; -o ./movie-users.json</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>导入单表数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongoimprot --host 127.0.0.1:8081 -d 696px -c users ./movie-users.json</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>删除已有数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo --host 127.0.0.1:8081 696px --eval &quot;db.dropDatabase()&quot;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="管理mongodb安全性"><a href="#管理mongodb安全性" class="headerlink" title="管理mongodb安全性"></a>管理mongodb安全性</h3><blockquote><p>最好是再数据库导入后再增加安全性</p></blockquote><p>进入mongo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line">db.createUser(&#123;user: &apos;696px_cases_owner&apos;,pwd: &apos;1004041672&apos;,roles: [&#123;role:&apos;userAdminAnyDatabase&apos;, db:&apos;admin&apos;&#125;]&#125;) 越复杂越好</span><br><span class="line"></span><br><span class="line">db.auth(&apos;696px_cases_owner&apos;,&apos;1004041672&apos;) 进行用户授权 1代表授权成功</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">use 696pppp</span><br><span class="line">db.createUser(&#123;user: &apos;696pppp-runner&apos;,pwd: &apos;1004041672&apos;,roles: [&#123;role:&apos;readWrite&apos;, db:&apos;696pppp&apos;&#125;]&#125;) 拥有读写权限</span><br><span class="line"></span><br><span class="line">db.createUser(&#123;user: &apos;696pppp-wheel&apos;,pwd: &apos;1004041672&apos;,roles: [&#123;role:&apos;read&apos;, db:&apos;696pppp&apos;&#125;]&#125;) 拥有读权限  </span><br><span class="line"></span><br><span class="line">以上密码最好都不一样</span><br><span class="line"></span><br><span class="line">然后要切换到admin 用admin用户授权</span><br><span class="line">use admin</span><br><span class="line">db.auth(&apos;696px_cases_owner&apos;,&apos;1004041672&apos;)</span><br></pre></td></tr></table></figure></p><blockquote><p>打开mongod配置文件修改security:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">security:</span><br><span class="line">  authorization: &apos;enabled&apos;</span><br><span class="line"></span><br><span class="line">重启</span><br><span class="line">service mongod restart</span><br><span class="line">mongo --port 8081</span><br><span class="line">use admin</span><br><span class="line">db.auth(&apos;696px_cases_owner&apos;,&apos;1004041672&apos;)</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>直接进入数据库 带有操作权限的那种<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongo 127.0.0.1:8081/admin -u 696px_cases_owner -p 1004041672</span><br><span class="line"></span><br><span class="line">这样就可以直接进去了。。</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>2018/1/21/01点39分 睡觉睡觉 溜了溜了</p></blockquote><h2 id="9-3-6"><a href="#9-3-6" class="headerlink" title="9-3~6"></a>9-3~6</h2><h3 id="迁移数据库"><a href="#迁移数据库" class="headerlink" title="迁移数据库"></a>迁移数据库</h3><blockquote><p>如果服务器上线后有密码的如何导入导出呢？其实大家搜索一下官网的话就能自己摸索出来</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Node-mongodb-nginx-linux&quot;&gt;&lt;a href=&quot;#Node-mongodb-nginx-linux&quot; class=&quot;headerlink&quot; title=&quot;Node+mongodb+nginx+linux&quot;&gt;&lt;/a&gt;Node+mongodb+nginx+linux&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;本次服务器为centos，只是临时在虚拟机建立的，虚拟机密码为1004041672&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;696px网站的部署以及linux一些命令记录，还有nginx是怎么用的，到底是个什么东西&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="node" scheme="demoorbug.github.io/tags/node/"/>
    
      <category term="mongodb" scheme="demoorbug.github.io/tags/mongodb/"/>
    
      <category term="nginx" scheme="demoorbug.github.io/tags/nginx/"/>
    
      <category term="linux" scheme="demoorbug.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="demoorbug.github.io/tags/ubuntu/"/>
    
  </entry>
  
</feed>
